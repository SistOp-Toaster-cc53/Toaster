{
  "version": 3,
  "sources": ["../../primevue/tag/tag.esm.js"],
  "sourcesContent": ["import { openBlock, createElementBlock, normalizeClass, createCommentVNode, renderSlot, createElementVNode, toDisplayString } from 'vue';\r\n\r\nvar script = {\r\n    name: 'Tag',\r\n    props: {\r\n        value: null,\r\n        severity: null,\r\n        rounded: Boolean,\r\n        icon: String\r\n    },\r\n    computed: {\r\n        containerClass() {\r\n            return [\r\n                'p-tag p-component',\r\n                {\r\n                    'p-tag-info': this.severity === 'info',\r\n                    'p-tag-success': this.severity === 'success',\r\n                    'p-tag-warning': this.severity === 'warning',\r\n                    'p-tag-danger': this.severity === 'danger',\r\n                    'p-tag-rounded': this.rounded\r\n                }\r\n            ];\r\n        },\r\n        iconClass() {\r\n            return ['p-tag-icon', this.icon];\r\n        }\r\n    }\r\n};\r\n\r\nconst _hoisted_1 = { class: \"p-tag-value\" };\r\n\r\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\r\n  return (openBlock(), createElementBlock(\"span\", {\r\n    class: normalizeClass($options.containerClass)\r\n  }, [\r\n    ($props.icon)\r\n      ? (openBlock(), createElementBlock(\"span\", {\r\n          key: 0,\r\n          class: normalizeClass($options.iconClass)\r\n        }, null, 2))\r\n      : createCommentVNode(\"\", true),\r\n    renderSlot(_ctx.$slots, \"default\", {}, () => [\r\n      createElementVNode(\"span\", _hoisted_1, toDisplayString($props.value), 1)\r\n    ])\r\n  ], 2))\r\n}\r\n\r\nfunction styleInject(css, ref) {\r\n  if ( ref === void 0 ) ref = {};\r\n  var insertAt = ref.insertAt;\r\n\r\n  if (!css || typeof document === 'undefined') { return; }\r\n\r\n  var head = document.head || document.getElementsByTagName('head')[0];\r\n  var style = document.createElement('style');\r\n  style.type = 'text/css';\r\n\r\n  if (insertAt === 'top') {\r\n    if (head.firstChild) {\r\n      head.insertBefore(style, head.firstChild);\r\n    } else {\r\n      head.appendChild(style);\r\n    }\r\n  } else {\r\n    head.appendChild(style);\r\n  }\r\n\r\n  if (style.styleSheet) {\r\n    style.styleSheet.cssText = css;\r\n  } else {\r\n    style.appendChild(document.createTextNode(css));\r\n  }\r\n}\r\n\r\nvar css_248z = \"\\n.p-tag {\\n    display: inline-flex;\\n    align-items: center;\\n    justify-content: center;\\n}\\n.p-tag-icon,\\n.p-tag-value,\\n.p-tag-icon.pi {\\n    line-height: 1.5;\\n}\\n.p-tag.p-tag-rounded {\\n    border-radius: 10rem;\\n}\\n\";\r\nstyleInject(css_248z);\r\n\r\nscript.render = render;\r\n\r\nexport { script as default };\r\n"],
  "mappings": ";;;;;;;;;;;;AAEA,IAAI,SAAS;AAAA,EACT,MAAM;AAAA,EACN,OAAO;AAAA,IACH,OAAO;AAAA,IACP,UAAU;AAAA,IACV,SAAS;AAAA,IACT,MAAM;AAAA,EACV;AAAA,EACA,UAAU;AAAA,IACN,iBAAiB;AACb,aAAO;AAAA,QACH;AAAA,QACA;AAAA,UACI,cAAc,KAAK,aAAa;AAAA,UAChC,iBAAiB,KAAK,aAAa;AAAA,UACnC,iBAAiB,KAAK,aAAa;AAAA,UACnC,gBAAgB,KAAK,aAAa;AAAA,UAClC,iBAAiB,KAAK;AAAA,QAC1B;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,YAAY;AACR,aAAO,CAAC,cAAc,KAAK,IAAI;AAAA,IACnC;AAAA,EACJ;AACJ;AAEA,IAAM,aAAa,EAAE,OAAO,cAAc;AAE1C,SAAS,OAAO,MAAM,QAAQ,QAAQ,QAAQ,OAAO,UAAU;AAC7D,SAAQ,UAAU,GAAG,mBAAmB,QAAQ;AAAA,IAC9C,OAAO,eAAe,SAAS,cAAc;AAAA,EAC/C,GAAG;AAAA,IACA,OAAO,QACH,UAAU,GAAG,mBAAmB,QAAQ;AAAA,MACvC,KAAK;AAAA,MACL,OAAO,eAAe,SAAS,SAAS;AAAA,IAC1C,GAAG,MAAM,CAAC,KACV,mBAAmB,IAAI,IAAI;AAAA,IAC/B,WAAW,KAAK,QAAQ,WAAW,CAAC,GAAG,MAAM;AAAA,MAC3C,gBAAmB,QAAQ,YAAY,gBAAgB,OAAO,KAAK,GAAG,CAAC;AAAA,IACzE,CAAC;AAAA,EACH,GAAG,CAAC;AACN;AAEA,SAAS,YAAY,KAAK,KAAK;AAC7B,MAAK,QAAQ,OAAS,OAAM,CAAC;AAC7B,MAAI,WAAW,IAAI;AAEnB,MAAI,CAAC,OAAO,OAAO,aAAa,aAAa;AAAE;AAAA,EAAQ;AAEvD,MAAI,OAAO,SAAS,QAAQ,SAAS,qBAAqB,MAAM,EAAE,CAAC;AACnE,MAAI,QAAQ,SAAS,cAAc,OAAO;AAC1C,QAAM,OAAO;AAEb,MAAI,aAAa,OAAO;AACtB,QAAI,KAAK,YAAY;AACnB,WAAK,aAAa,OAAO,KAAK,UAAU;AAAA,IAC1C,OAAO;AACL,WAAK,YAAY,KAAK;AAAA,IACxB;AAAA,EACF,OAAO;AACL,SAAK,YAAY,KAAK;AAAA,EACxB;AAEA,MAAI,MAAM,YAAY;AACpB,UAAM,WAAW,UAAU;AAAA,EAC7B,OAAO;AACL,UAAM,YAAY,SAAS,eAAe,GAAG,CAAC;AAAA,EAChD;AACF;AAEA,IAAI,WAAW;AACf,YAAY,QAAQ;AAEpB,OAAO,SAAS;",
  "names": []
}
